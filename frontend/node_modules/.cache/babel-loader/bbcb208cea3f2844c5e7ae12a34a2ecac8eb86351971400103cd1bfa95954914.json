{"ast":null,"code":"var _jsxFileName = \"E:\\\\tutorials\\\\Dennis Ivy Django React Notes App\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  const {\n    idValue\n  } = useParams();\n  let noteId = idValue;\n  let navigate = useNavigate();\n  let [note, setNote] = useState(null);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}`);\n    let data = await response.json();\n    //console.log(data);\n    setNote(data);\n  };\n\n  // let updateNote = async () => {\n  //     await fetch(`api/notes/${noteId}/update`, {\n  //         method: \"PUT\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify(note),\n  //     });\n  // };\n\n  let updateNote = async () => {\n    await fetch(`/api/notes/${noteId}/update`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    await fetch(`/api/notes/${noteId}/delete`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    navigate(\"/\");\n  };\n  let handleSubmit = async () => {\n    updateNote();\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          body: e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NotePage, \"xXQeKk09WFN6u0g6xzO1zO9igcU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","idValue","noteId","navigate","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","deleteNote","handleSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["E:/tutorials/Dennis Ivy Django React Notes App/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = () => {\r\n    const { idValue } = useParams();\r\n    let noteId = idValue;\r\n    let navigate = useNavigate();\r\n    let [note, setNote] = useState(null);\r\n\r\n    let getNote = async () => {\r\n        let response = await fetch(`/api/notes/${noteId}`);\r\n        let data = await response.json();\r\n        //console.log(data);\r\n        setNote(data);\r\n    };\r\n\r\n    // let updateNote = async () => {\r\n    //     await fetch(`api/notes/${noteId}/update`, {\r\n    //         method: \"PUT\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(note),\r\n    //     });\r\n    // };\r\n\r\n    let updateNote = async () => {\r\n        await fetch(`/api/notes/${noteId}/update`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(note),\r\n        });\r\n    };\r\n\r\n    let deleteNote = async () => {\r\n        await fetch(`/api/notes/${noteId}/delete`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n        navigate(\"/\");\r\n    };\r\n\r\n    let handleSubmit = async () => {\r\n        updateNote();\r\n        navigate(\"/\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNote();\r\n    }, [noteId]);\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <div className=\"note-header\">\r\n                <h3>\r\n                    <ArrowLeft onClick={handleSubmit} />\r\n                </h3>\r\n                <button onClick={deleteNote}>Delete</button>\r\n            </div>\r\n            <textarea\r\n                onChange={(e) => {\r\n                    setNote({ ...note, body: e.target.value });\r\n                }}\r\n                defaultValue={note?.body}\r\n            ></textarea>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}